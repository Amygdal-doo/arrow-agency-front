{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/aisabektas/projects/arrow-agency-front/app/components/CVForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useState } from \"react\";\nimport axios, { AxiosResponse } from \"axios\";\n\nconst userFormSchema = z.object({\n  name: z.string().min(2, { message: \"Name must be at least 2 characters.\" }),\n  surname: z\n    .string()\n    .min(2, { message: \"Surname must be at least 2 characters.\" }),\n  email: z.string().email({ message: \"Invalid email address.\" }),\n  phone: z.string().min(6, { message: \"Phone number must be valid.\" }),\n  file: z\n    .instanceof(File, { message: \"File is required and must be a PDF.\" })\n    .refine((file) => file.type === \"application/pdf\", {\n      message: \"Only PDF files are allowed.\",\n    }),\n  technologies: z.array(z.string()).optional(),\n});\n\ntype UserFormInputs = z.infer<typeof userFormSchema>;\n\nconst CVForm = () => {\n  const [fileName, setFileName] = useState<string | null>(null);\n  const [technologies, setTechnologies] = useState<string[]>([]);\n  const [techInput, setTechInput] = useState(\"\");\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    setError,\n    clearErrors,\n    formState: { errors },\n  } = useForm<UserFormInputs>({\n    resolver: zodResolver(userFormSchema),\n    defaultValues: {\n      name: \"\",\n      surname: \"\",\n      email: \"\",\n      phone: \"\",\n      technologies: [],\n    },\n  });\n\n  const onSubmit = async (data: UserFormInputs) => {\n    console.log(\"Form Data:\", data);\n    try {\n      const formData = new FormData();\n      formData.append(\"name\", data.name);\n      formData.append(\"surname\", data.surname);\n      formData.append(\"email\", data.email);\n      formData.append(\"phone\", data.phone);\n\n      if (data.file) {\n        formData.append(\"file\", data.file);\n      }\n\n      if (data.technologies && data.technologies.length > 0) {\n        formData.append(\"technologies\", JSON.stringify(data.technologies));\n      }\n\n      const response: AxiosResponse = await axios.post(\n        \"https://arrow-agency-back-production.up.railway.app/api/pdf/cv\",\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n\n      console.log(\"CV Saved Successfully:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error saving CV:\", error);\n      throw error;\n    }\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n\n    if (!file) {\n      setError(\"file\", {\n        type: \"manual\",\n        message: \"File is required and must be a PDF.\",\n      });\n      return;\n    }\n\n    if (file.type !== \"application/pdf\") {\n      setError(\"file\", {\n        type: \"manual\",\n        message: \"Only PDF files are allowed.\",\n      });\n      return;\n    }\n\n    setFileName(file.name);\n    setValue(\"file\", file);\n    clearErrors(\"file\"); // Remove error message when a valid file is uploaded\n  };\n\n  const handleAddTechnology = () => {\n    if (techInput.trim() !== \"\") {\n      const updatedTechnologies = [...technologies, techInput];\n      setTechnologies(updatedTechnologies);\n      setValue(\"technologies\", updatedTechnologies);\n      setTechInput(\"\");\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      handleAddTechnology();\n    }\n  };\n\n  const handleRemoveTechnology = (index: number) => {\n    const updatedTechnologies = technologies.filter((_, i) => i !== index);\n    setTechnologies(updatedTechnologies);\n    setValue(\"technologies\", updatedTechnologies);\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n      className=\"w-full max-w-md min-2-lg mx-auto space-y-4 pb-16 pt-8 px-8 rounded-md shadow-2xl\"\n    >\n      <div className=\"flex justify-center pb-8 flex-col items-center\">\n        <p className=\"text-2xl font-bold text-[#0a0a23] pr-10\">Amygdal</p>\n        <p className=\"text-2xl font-bold text-[#A020F0] pl-20\">CV Editor</p>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-bold\">Name</label>\n        <input {...register(\"name\")} className=\"w-full border p-2 rounded\" />\n        {errors.name && (\n          <p className=\"text-red-500 text-sm\">{errors.name.message}</p>\n        )}\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-bold\">Surname</label>\n        <input {...register(\"surname\")} className=\"w-full border p-2 rounded\" />\n        {errors.surname && (\n          <p className=\"text-red-500 text-sm\">{errors.surname.message}</p>\n        )}\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-bold\">Email</label>\n        <input\n          {...register(\"email\")}\n          type=\"email\"\n          className=\"w-full border p-2 rounded\"\n        />\n        {errors.email && (\n          <p className=\"text-red-500 text-sm\">{errors.email.message}</p>\n        )}\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-bold\">Phone Number</label>\n        <input {...register(\"phone\")} className=\"w-full border p-2 rounded\" />\n        {errors.phone && (\n          <p className=\"text-red-500 text-sm\">{errors.phone.message}</p>\n        )}\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-bold\">Upload PDF</label>\n        <div className=\"relative w-full\">\n          <input\n            type=\"file\"\n            accept=\".pdf\"\n            onChange={handleFileUpload}\n            className=\"hidden\"\n            id=\"file-upload\"\n          />\n          <label\n            htmlFor=\"file-upload\"\n            className=\"bg-[#0a0a23] text-white text-sm w-full font-bold py-2 px-4 rounded cursor-pointer inline-block text-center\"\n          >\n            Upload File\n          </label>\n        </div>\n        {fileName && (\n          <p className=\"text-sm mt-2 font-bold text-orange-500\">\n            Selected file: {fileName}\n          </p>\n        )}\n        {errors.file && (\n          <p className=\"text-red-500 text-sm\">{errors.file.message}</p>\n        )}\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-bold\">Technologies</label>\n        <div className=\"flex gap-2\">\n          <input\n            type=\"text\"\n            value={techInput}\n            onChange={(e) => setTechInput(e.target.value)}\n            onKeyDown={handleKeyPress}\n            className=\"w-full border p-2 rounded\"\n            placeholder=\"Add technology\"\n          />\n          <button\n            type=\"button\"\n            onClick={handleAddTechnology}\n            className=\"bg-[#0a0a23] text-sm font-bold text-white py-2 px-4 rounded\"\n          >\n            Add\n          </button>\n        </div>\n        <div className=\"mt-2 flex flex-wrap gap-2\">\n          {technologies.map((tech, index) => (\n            <div\n              key={index}\n              className=\"flex items-center group bg-gray-200 py-2 px-4 rounded\"\n            >\n              <span>{tech}</span>\n              <button\n                type=\"button\"\n                onClick={() => handleRemoveTechnology(index)}\n                className=\"ml-3 text-red-300 group-hover:text-red-600 font-bold\"\n              >\n                âœ•\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"w-full bg-[#A020F0] text-sm font-bold text-white p-2 rounded\"\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default CVForm;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":["file:///Users/aisabektas/projects/arrow-agency-front/app/components/Navbar.tsx"],"sourcesContent":["import React from \"react\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"w-full bg-black p-6\">\n      <div className=\"container mx-auto flex items-center justify-between\">\n        <div className=\"flex items-center space-x-16\">\n          <p className=\"text-4xl font-bold text-white\">Amygdal</p>\n\n          <ul className=\"flex space-x-10\">\n            <li className=\"text-white font-medium text-xl\">What we do</li>\n            <li className=\"text-white font-medium text-xl\">For Talent</li>\n            <li className=\"text-white font-medium text-xl\">For Clients</li>\n          </ul>\n        </div>\n\n        <button className=\"bg-white px-6 py-2 rounded-md text-[#0a0a23] font-bold\">\n          Login\n        </button>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"names":[],"mappings":";;;;;AAEA,MAAM,SAAS;IACb,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;sCAAgC;;;;;;sCAE7C,8OAAC;4BAAG,WAAU;;8CACZ,8OAAC;oCAAG,WAAU;8CAAiC;;;;;;8CAC/C,8OAAC;oCAAG,WAAU;8CAAiC;;;;;;8CAC/C,8OAAC;oCAAG,WAAU;8CAAiC;;;;;;;;;;;;;;;;;;8BAInD,8OAAC;oBAAO,WAAU;8BAAyD;;;;;;;;;;;;;;;;;AAMnF;uCAEe"}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"sources":["file:///Users/aisabektas/projects/arrow-agency-front/app/components/Modal.tsx"],"sourcesContent":["\"use client\";\n\nimport { X } from \"lucide-react\";\nimport { ReactNode } from \"react\";\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: ReactNode;\n}\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center bg-[#0a0a23] bg-opacity-50 z-50\">\n      <div className=\"relative bg-white rounded-lg shadow-lg w-full max-w-md mx-auto\">\n        <button\n          onClick={onClose}\n          className=\"absolute top-4 right-4 text-gray-500 hover:text-gray-700\"\n          aria-label=\"Close\"\n        >\n          <X className=\"w-6 h-6\" />\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAWA,MAAM,QAA8B,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE;IAChE,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBACC,SAAS;oBACT,WAAU;oBACV,cAAW;8BAEX,cAAA,8OAAC,4LAAA,CAAA,IAAC;wBAAC,WAAU;;;;;;;;;;;gBAEd;;;;;;;;;;;;AAIT;uCAEe"}},
    {"offset": {"line": 687, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":["file:///Users/aisabektas/projects/arrow-agency-front/app/page.tsx"],"sourcesContent":["\"use client\";\nimport CVForm from \"./components/CVForm\";\nimport Navbar from \"./components/Navbar\";\nimport HeroBackground from \"../public/hero.jpg\";\nimport Image from \"next/image\";\nimport { useState } from \"react\";\nimport Modal from \"./components/Modal\";\n\nexport default function Home() {\n  return (\n    <div className=\"flex flex-col min-h-screen bg-[#0a0a23]\">\n      <Navbar />\n      <main className=\"w-full\"></main>\n      <footer className=\"row-start-3 flex gap-6 flex-wrap items-center justify-center\"></footer>\n\n      <Modal isOpen={showCVModal} onClose={() => setShowCVModal(false)}>\n        <CVForm />\n      </Modal>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAIA;AANA;;;;;AAQe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4HAAA,CAAA,UAAM;;;;;0BACP,8OAAC;gBAAK,WAAU;;;;;;0BAChB,8OAAC;gBAAO,WAAU;;;;;;0BAElB,8OAAC,2HAAA,CAAA,UAAK;gBAAC,QAAQ;gBAAa,SAAS,IAAM,eAAe;0BACxD,cAAA,8OAAC,4HAAA,CAAA,UAAM;;;;;;;;;;;;;;;;AAIf"}},
    {"offset": {"line": 748, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}