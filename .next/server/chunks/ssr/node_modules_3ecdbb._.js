module.exports = {

"[project]/node_modules/uuid/dist/esm/native.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__ = __turbopack_import__("[externals]/crypto [external] (crypto, cjs)");
;
const __TURBOPACK__default__export__ = {
    randomUUID: __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["randomUUID"]
};
}}),
"[project]/node_modules/uuid/dist/esm/rng.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>rng)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__ = __turbopack_import__("[externals]/crypto [external] (crypto, cjs)");
;
const rnds8Pool = new Uint8Array(256);
let poolPtr = rnds8Pool.length;
function rng() {
    if (poolPtr > rnds8Pool.length - 16) {
        (0, __TURBOPACK__imported__module__$5b$externals$5d2f$crypto__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["randomFillSync"])(rnds8Pool);
        poolPtr = 0;
    }
    return rnds8Pool.slice(poolPtr, poolPtr += 16);
}
}}),
"[project]/node_modules/uuid/dist/esm/regex.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
const __TURBOPACK__default__export__ = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;
}}),
"[project]/node_modules/uuid/dist/esm/validate.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$regex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm/regex.js [app-ssr] (ecmascript)");
;
function validate(uuid) {
    return typeof uuid === 'string' && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$regex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].test(uuid);
}
const __TURBOPACK__default__export__ = validate;
}}),
"[project]/node_modules/uuid/dist/esm/stringify.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__),
    "unsafeStringify": (()=>unsafeStringify)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$validate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm/validate.js [app-ssr] (ecmascript)");
;
const byteToHex = [];
for(let i = 0; i < 256; ++i){
    byteToHex.push((i + 0x100).toString(16).slice(1));
}
function unsafeStringify(arr, offset = 0) {
    return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();
}
function stringify(arr, offset = 0) {
    const uuid = unsafeStringify(arr, offset);
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$validate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(uuid)) {
        throw TypeError('Stringified UUID is invalid');
    }
    return uuid;
}
const __TURBOPACK__default__export__ = stringify;
}}),
"[project]/node_modules/uuid/dist/esm/v4.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$native$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm/native.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$rng$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm/rng.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm/stringify.js [app-ssr] (ecmascript)");
;
;
;
function v4(options, buf, offset) {
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$native$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].randomUUID && !buf && !options) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$native$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].randomUUID();
    }
    options = options || {};
    const rnds = options.random ?? options.rng?.() ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$rng$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])();
    if (rnds.length < 16) {
        throw new Error('Random bytes length must be >= 16');
    }
    rnds[6] = rnds[6] & 0x0f | 0x40;
    rnds[8] = rnds[8] & 0x3f | 0x80;
    if (buf) {
        offset = offset || 0;
        if (offset < 0 || offset + 16 > buf.length) {
            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);
        }
        for(let i = 0; i < 16; ++i){
            buf[offset + i] = rnds[i];
        }
        return buf;
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["unsafeStringify"])(rnds);
}
const __TURBOPACK__default__export__ = v4;
}}),
"[project]/node_modules/uuid/dist/esm/v4.js [app-ssr] (ecmascript) <export default as v4>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({
    "v4": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$v4$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2f$v4$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm/v4.js [app-ssr] (ecmascript)");
}}),
"[project]/node_modules/react-to-print/lib/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
!function(e, t) {
    ("TURBOPACK compile-time truthy", 1) ? module.exports = t(__turbopack_require__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)")) : ("TURBOPACK unreachable", undefined);
}("undefined" != typeof self ? self : this, function(e) {
    return function() {
        "use strict";
        var t = {
            155: function(t) {
                t.exports = e;
            }
        }, o = {};
        function n(e) {
            var r = o[e];
            if (void 0 !== r) return r.exports;
            var s = o[e] = {
                exports: {}
            };
            return t[e](s, s.exports, n), s.exports;
        }
        n.d = function(e, t) {
            for(var o in t)n.o(t, o) && !n.o(e, o) && Object.defineProperty(e, o, {
                enumerable: !0,
                get: t[o]
            });
        }, n.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
        }, n.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            });
        };
        var r = {};
        n.r(r), n.d(r, {
            useReactToPrint: function() {
                return g;
            }
        });
        var s = n(155);
        function i({ level: e = "error", messages: t, suppressErrors: o = !1 }) {
            o || ("error" === e ? console.error(t) : "warning" === e ? console.warn(t) : console.debug(t));
        }
        function l(e, t) {
            if (t || !e) {
                const e = document.getElementById("printWindow");
                e && document.body.removeChild(e);
            }
        }
        function a(e) {
            return e instanceof Error ? e : new Error("Unknown Error");
        }
        function c(e, t) {
            const { documentTitle: o, onAfterPrint: n, onPrintError: r, preserveAfterPrint: s, print: c, suppressErrors: d } = t;
            setTimeout(()=>{
                var t, u;
                if (e.contentWindow) {
                    function p() {
                        null == n || n(), l(s);
                    }
                    if (e.contentWindow.focus(), c) c(e).then(p).catch((e)=>{
                        r ? r("print", a(e)) : i({
                            messages: [
                                "An error was thrown by the specified `print` function"
                            ],
                            suppressErrors: d
                        });
                    });
                    else {
                        if (e.contentWindow.print) {
                            const h = null !== (u = null === (t = e.contentDocument) || void 0 === t ? void 0 : t.title) && void 0 !== u ? u : "", f = e.ownerDocument.title;
                            o && (e.ownerDocument.title = o, e.contentDocument && (e.contentDocument.title = o)), e.contentWindow.print(), o && (e.ownerDocument.title = f, e.contentDocument && (e.contentDocument.title = h));
                        } else i({
                            messages: [
                                "Printing for this browser is not currently possible: the browser does not have a `print` method available for iframes."
                            ],
                            suppressErrors: d
                        });
                        [
                            /Android/i,
                            /webOS/i,
                            /iPhone/i,
                            /iPad/i,
                            /iPod/i,
                            /BlackBerry/i,
                            /Windows Phone/i
                        ].some((e)=>{
                            var t, o;
                            return (null !== (o = null !== (t = navigator.userAgent) && void 0 !== t ? t : navigator.vendor) && void 0 !== o ? o : "opera" in window && window.opera).match(e);
                        }) ? setTimeout(p, 500) : p();
                    }
                } else i({
                    messages: [
                        "Printing failed because the `contentWindow` of the print iframe did not load. This is possibly an error with `react-to-print`. Please file an issue: https://github.com/MatthewHerbst/react-to-print/issues/"
                    ],
                    suppressErrors: d
                });
            }, 500);
        }
        function d(e) {
            const t = [], o = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, null);
            let n = o.nextNode();
            for(; n;)t.push(n), n = o.nextNode();
            return t;
        }
        function u(e, t, o) {
            const n = d(e), r = d(t);
            if (n.length === r.length) for(let e = 0; e < n.length; e++){
                const t = n[e], s = r[e], i = t.shadowRoot;
                if (null !== i) {
                    const e = s.attachShadow({
                        mode: i.mode
                    });
                    e.innerHTML = i.innerHTML, u(i, e, o);
                }
            }
            else i({
                messages: [
                    "When cloning shadow root content, source and target elements have different size. `onBeforePrint` likely resolved too early.",
                    e,
                    t
                ],
                suppressErrors: o
            });
        }
        const p = '\n    @page {\n        /* Remove browser default header (title) and footer (url) */\n        margin: 0;\n    }\n    @media print {\n        body {\n            /* Tell browsers to print background colors */\n            color-adjust: exact; /* Firefox. This is an older version of "print-color-adjust" */\n            print-color-adjust: exact; /* Firefox/Safari */\n            -webkit-print-color-adjust: exact; /* Chrome/Safari/Edge/Opera */\n        }\n    }\n';
        function h(e, t, o, n) {
            var r, s, l, d, h;
            const { contentNode: f, clonedContentNode: g, clonedImgNodes: m, clonedVideoNodes: b, numResourcesToLoad: y, originalCanvasNodes: v } = o, { bodyClass: w, fonts: E, ignoreGlobalStyles: A, pageStyle: T, nonce: k, suppressErrors: x, copyShadowRoots: S } = n;
            e.onload = null;
            const P = null !== (r = e.contentDocument) && void 0 !== r ? r : null === (s = e.contentWindow) || void 0 === s ? void 0 : s.document;
            if (P) {
                const o = P.body.appendChild(g);
                S && u(f, o, !!x), E && ((null === (l = e.contentDocument) || void 0 === l ? void 0 : l.fonts) && (null === (d = e.contentWindow) || void 0 === d ? void 0 : d.FontFace) ? E.forEach((o)=>{
                    const n = new FontFace(o.family, o.source, {
                        weight: o.weight,
                        style: o.style
                    });
                    e.contentDocument.fonts.add(n), n.loaded.then(()=>{
                        t(n);
                    }).catch((e)=>{
                        t(n, [
                            "Failed loading the font:",
                            n,
                            "Load error:",
                            a(e)
                        ]);
                    });
                }) : (E.forEach((e)=>{
                    t(e);
                }), i({
                    messages: [
                        '"react-to-print" is not able to load custom fonts because the browser does not support the FontFace API but will continue attempting to print the page'
                    ],
                    suppressErrors: x
                })));
                const n = null != T ? T : p, r = P.createElement("style");
                k && (r.setAttribute("nonce", k), P.head.setAttribute("nonce", k)), r.appendChild(P.createTextNode(n)), P.head.appendChild(r), w && P.body.classList.add(...w.split(" "));
                const s = P.querySelectorAll("canvas");
                for(let e = 0; e < v.length; ++e){
                    const t = v[e], o = s[e];
                    if (void 0 === o) {
                        i({
                            messages: [
                                "A canvas element could not be copied for printing, has it loaded? `onBeforePrint` likely resolved too early.",
                                t
                            ],
                            suppressErrors: x
                        });
                        continue;
                    }
                    const n = o.getContext("2d");
                    n && n.drawImage(t, 0, 0);
                }
                for(let e = 0; e < m.length; e++){
                    const o = m[e], n = o.getAttribute("src");
                    if (n) {
                        const e = new Image;
                        e.onload = ()=>{
                            t(o);
                        }, e.onerror = (e, n, r, s, i)=>{
                            t(o, [
                                "Error loading <img>",
                                o,
                                "Error",
                                i
                            ]);
                        }, e.src = n;
                    } else t(o, [
                        'Found an <img> tag with an empty "src" attribute. This prevents pre-loading it.',
                        o
                    ]);
                }
                for(let e = 0; e < b.length; e++){
                    const o = b[e];
                    o.preload = "auto";
                    const n = o.getAttribute("poster");
                    if (n) {
                        const e = new Image;
                        e.onload = ()=>{
                            t(o);
                        }, e.onerror = (e, r, s, i, l)=>{
                            t(o, [
                                "Error loading video poster",
                                n,
                                "for video",
                                o,
                                "Error:",
                                l
                            ]);
                        }, e.src = n;
                    } else o.readyState >= 2 ? t(o) : o.src ? (o.onloadeddata = ()=>{
                        t(o);
                    }, o.onerror = (e, n, r, s, i)=>{
                        t(o, [
                            "Error loading video",
                            o,
                            "Error",
                            i
                        ]);
                    }, o.onstalled = ()=>{
                        t(o, [
                            "Loading video stalled, skipping",
                            o
                        ]);
                    }) : t(o, [
                        "Error loading video, `src` is empty",
                        o
                    ]);
                }
                const c = "select", y = f.querySelectorAll(c), N = P.querySelectorAll(c);
                for(let e = 0; e < y.length; e++)N[e].value = y[e].value;
                if (!A) {
                    const e = document.querySelectorAll("style, link[rel~='stylesheet'], link[as='style']");
                    for(let o = 0, n = e.length; o < n; ++o){
                        const n = e[o];
                        if ("style" === n.tagName.toLowerCase()) {
                            const e = P.createElement(n.tagName), t = n.sheet;
                            if (t) {
                                let r = "";
                                try {
                                    const e = t.cssRules.length;
                                    for(let o = 0; o < e; ++o)"string" == typeof t.cssRules[o].cssText && (r += `${t.cssRules[o].cssText}\r\n`);
                                } catch (e) {
                                    i({
                                        messages: [
                                            "A stylesheet could not be accessed. This is likely due to the stylesheet having cross-origin imports, and many browsers block script access to cross-origin stylesheets. See https://github.com/MatthewHerbst/react-to-print/issues/429 for details. You may be able to load the sheet by both marking the stylesheet with the cross `crossorigin` attribute, and setting the `Access-Control-Allow-Origin` header on the server serving the stylesheet. Alternatively, host the stylesheet on your domain to avoid this issue entirely.",
                                            n,
                                            `Original error: ${a(e).message}`
                                        ],
                                        level: "warning"
                                    });
                                }
                                e.setAttribute("id", `react-to-print-${o}`), k && e.setAttribute("nonce", k), e.appendChild(P.createTextNode(r)), P.head.appendChild(e);
                            }
                        } else if (n.getAttribute("href")) if (n.hasAttribute("disabled")) i({
                            messages: [
                                "`react-to-print` encountered a <link> tag with a `disabled` attribute and will ignore it. Note that the `disabled` attribute is deprecated, and some browsers ignore it. You should stop using it. https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-disabled. The <link> is:",
                                n
                            ],
                            level: "warning"
                        }), t(n);
                        else {
                            const e = P.createElement(n.tagName);
                            for(let t = 0, o = n.attributes.length; t < o; ++t){
                                const o = n.attributes[t];
                                o && e.setAttribute(o.nodeName, null !== (h = o.nodeValue) && void 0 !== h ? h : "");
                            }
                            e.onload = ()=>{
                                t(e);
                            }, e.onerror = (o, n, r, s, i)=>{
                                t(e, [
                                    "Failed to load",
                                    e,
                                    "Error:",
                                    i
                                ]);
                            }, k && e.setAttribute("nonce", k), P.head.appendChild(e);
                        }
                        else i({
                            messages: [
                                "`react-to-print` encountered a <link> tag with an empty `href` attribute. In addition to being invalid HTML, this can cause problems in many browsers, and so the <link> was not loaded. The <link> is:",
                                n
                            ],
                            level: "warning"
                        }), t(n);
                    }
                }
            }
            0 === y && c(e, n);
        }
        function f(e, t, o, n) {
            e.onload = ()=>{
                h(e, t, o, n);
            }, document.body.appendChild(e);
        }
        function g(e) {
            const { contentRef: t, fonts: o, ignoreGlobalStyles: n, onBeforePrint: r, onPrintError: d, preserveAfterPrint: u, suppressErrors: p } = e, h = (0, s.useCallback)((s)=>{
                l(u, !0);
                const h = function({ contentRef: e, optionalContent: t, suppressErrors: o }) {
                    return t && (e && i({
                        level: "warning",
                        messages: [
                            '"react-to-print" received a `contentRef` option and a optional-content param passed to its callback. The `contentRef` option will be ignored.'
                        ]
                    }), "function" == typeof t) ? t() : e ? e.current : void i({
                        messages: [
                            '"react-to-print" did not receive a `contentRef` option or a optional-content param pass to its callback.'
                        ],
                        suppressErrors: o
                    });
                }({
                    contentRef: t,
                    optionalContent: s,
                    suppressErrors: p
                });
                if (!h) return void i({
                    messages: [
                        "There is nothing to print"
                    ],
                    suppressErrors: p
                });
                const g = h.cloneNode(!0), m = document.querySelectorAll("link[rel~='stylesheet'], link[as='style']"), b = g.querySelectorAll("img"), y = g.querySelectorAll("video"), v = o ? o.length : 0, w = (n ? 0 : m.length) + b.length + y.length + v, E = [], A = [], T = function() {
                    const e = document.createElement("iframe");
                    return e.width = `${document.documentElement.clientWidth}px`, e.height = `${document.documentElement.clientHeight}px`, e.style.position = "absolute", e.style.top = `-${document.documentElement.clientHeight + 100}px`, e.style.left = `-${document.documentElement.clientWidth + 100}px`, e.id = "printWindow", e.srcdoc = "<!DOCTYPE html>", e;
                }(), k = (t, o)=>{
                    E.includes(t) ? i({
                        level: "debug",
                        messages: [
                            "Tried to mark a resource that has already been handled",
                            t
                        ],
                        suppressErrors: p
                    }) : (o ? (i({
                        messages: [
                            '"react-to-print" was unable to load a resource but will continue attempting to print the page',
                            ...o
                        ],
                        suppressErrors: p
                    }), A.push(t)) : E.push(t), E.length + A.length === w && c(T, e));
                }, x = {
                    contentNode: h,
                    clonedContentNode: g,
                    clonedImgNodes: b,
                    clonedVideoNodes: y,
                    numResourcesToLoad: w,
                    originalCanvasNodes: h.querySelectorAll("canvas")
                };
                r ? r().then(()=>{
                    f(T, k, x, e);
                }).catch((e)=>{
                    null == d || d("onBeforePrint", a(e));
                }) : f(T, k, x, e);
            }, [
                e
            ]);
            return h;
        }
        return r;
    }();
});
}}),

};

//# sourceMappingURL=node_modules_3ecdbb._.js.map