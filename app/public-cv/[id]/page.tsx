"use client";
import { usePublicCV } from "@/providers/PublicCvProvider";
import { motion } from "framer-motion";
import Link from "next/link";
import { handleDownload } from "@/core/consts/handleDownload";
import CVPreviewOne from "@/app/components/templates/CVPreviewOne";
import CVPreviewTwo from "@/app/components/templates/CVPreviewTwo";
import CVPreviewThree from "@/app/components/templates/CVPreviewThree";

const PublicCv = () => {
  const { cv, loading } = usePublicCV();

  if (loading) {
    return (
      <div className="min-h-screen bg-white/[0.99] flex items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-orange-500"></div>
      </div>
    );
  }

  if (!cv) {
    return (
      <div className="min-h-screen bg-white/[0.99] flex items-center justify-center">
        <p className="text-gray-900">CV not found</p>
      </div>
    );
  }

  const {
    summary,
    skills,
    hobbies,
    experience,
    projects,
    educations,
    certificates,
    courses,
    socials,
    companyName,
    languages,
    showPersonalInfo,
    showCompanyInfo,
    firstName,
    lastName,
    email,
    phone,
    companyLogo,
    primaryColor,
    applicant,
    tertiaryColor,
  } = cv;

  return (
    <div className="min-h-screen bg-white/[0.99] text-white py-5">
      <div className="fixed top-8 left-8 z-50">
        <motion.div
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.3 }}
        >
          <Link
            href="/"
            className="group flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-orange-500 to-orange-600 rounded-xl hover:shadow-orange-500/25 hover:scale-105 transition-all duration-200"
          >
            <span className="font-medium">Visit Arrow Agency</span>
          </Link>
        </motion.div>
      </div>
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="fixed bottom-8 right-8 z-50 flex flex-col items-end gap-4"
      >
        <div className="bg-white/10 backdrop-blur-lg p-2 rounded-2xl shadow-xl border border-white/20">
          <button
            onClick={() => handleDownload(applicant.file)}
            className="group flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-orange-500 to-orange-600 rounded-xl hover:shadow-orange-500/25 hover:scale-105 transition-all duration-200"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              className="w-5 h-5 group-hover:scale-110 transition-transform"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"
              />
            </svg>
            <span className="font-medium">Download PDF</span>
          </button>
        </div>

        <motion.div
          initial={{ opacity: 0, x: 20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.2 }}
          className="bg-white/10 backdrop-blur-lg px-4 py-2 rounded-xl shadow-xl border border-white/20 text-sm text-black/80"
        >
          Generated by Arrow Agency
        </motion.div>
      </motion.div>
      <div className="max-w-screen-lg mx-auto px-4 xl:flex xl:space-x-5 space-y-8 xl:space-y-0">
        <div className="w-full min-h-[29.7cm] p-10 mx-auto  rounded-lg font-['Inter'] relative">
          {" "}
          {/* Add watermark */}
          <div className="absolute justify-center w-full h-full flex items-center top-0 left-0 gap-2 text-black/30 opacity-20 text-5xl">
            <span className="[writing-mode:vertical-rl] rotate-180 tracking-[10px]">
              Powered by Arrow Agency
            </span>
          </div>
          {applicant.templateId === "cv2" && (
            <CVPreviewOne
              summary={summary}
              currentSkills={skills}
              hobbies={hobbies}
              currentExperience={experience}
              currentProjects={projects}
              currentEducations={educations}
              currentCertificates={certificates}
              currentCourses={courses}
              currentSocials={socials}
              companyName={companyName}
              currentLanguages={languages}
              showPersonalInfo={showPersonalInfo}
              showCompanyInfo={showCompanyInfo}
              firstName={firstName}
              lastName={lastName}
              email={email}
              phone={phone}
              companyLogo={companyLogo}
              primaryColor={primaryColor}
            />
          )}
          {applicant.templateId === "cv3" && (
            <CVPreviewTwo
              summary={summary}
              currentSkills={skills}
              hobbies={hobbies}
              currentExperience={experience}
              currentProjects={projects}
              currentEducations={educations}
              currentCertificates={certificates}
              currentCourses={courses}
              currentSocials={socials}
              companyName={companyName}
              currentLanguages={languages}
              showPersonalInfo={showPersonalInfo}
              showCompanyInfo={showCompanyInfo}
              firstName={firstName}
              lastName={lastName}
              email={email}
              phone={phone}
              companyLogo={companyLogo}
              primaryColor={primaryColor}
            />
          )}
          {applicant.templateId === "cv4" && (
            <CVPreviewThree
              summary={summary}
              currentSkills={skills}
              hobbies={hobbies}
              currentExperience={experience}
              currentProjects={projects}
              currentEducations={educations}
              currentCertificates={certificates}
              currentCourses={courses}
              currentSocials={socials}
              companyName={companyName}
              currentLanguages={languages}
              showPersonalInfo={showPersonalInfo}
              showCompanyInfo={showCompanyInfo}
              firstName={firstName}
              lastName={lastName}
              email={email}
              phone={phone}
              companyLogo={companyLogo}
              primaryColor={primaryColor}
              tertiaryColor={tertiaryColor}
            />
          )}
        </div>
      </div>
    </div>
  );
};
export default PublicCv;
